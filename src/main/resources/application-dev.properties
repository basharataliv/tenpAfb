logging.level.com.afba.imageplus=DEBUG

#Primary SQLSERVER Database Credentials
spring.datasource.jdbc-url=${LOCAL_MSSQL_URL}
spring.datasource.username=${LOCAL_MSSQL_USERNAME}
spring.datasource.password=${LOCAL_MSSQL_PASSWORD}
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
logging.config=classpath:logback-prod.xml


#Secondary DB2 Credentials
spring.secondary-datasource.jdbc-url =${LOCAL_DB2_URL}
spring.secondary-datasource.username =${LOCAL_DB2_USERNAME}
spring.secondary-datasource.password =${LOCAL_DB2_PASSWORD}
spring.secondary-datasource.driver-class-name =com.ibm.db2.jcc.DB2Driver

#lifepro api token cred
life.pro.token.user=${LIFE_PRO_TOKEN_USER}
life.pro.token.password=${LIFE_PRO_TOKEN_PASSWORD}
life.pro.token.grant=${LIFE_PRO_TOKEN_GRANT}

life.pro.base.url = ${LIFE_PRO_BASE_URL}
life.pro.coder.id = ${LIFE_PRO_CODER_ID}
life.pro.company.id = ${COMPANY_LISTID_PARAMDEFINITION_ID}
life.pro.name.id = ${NAME_LISTID_PARAMDEFINITION_ID}

#Life pro Coder Id
#Remote Access for Local
#server.port=8080

#FTP Configurations
# Possible options {sftp, ftp}
ftp.protocol=${FTP_PROTOCOL}

ftp.host=${FTP_HOST}
ftp.port=${FTP_PORT}
ftp.username=${FTP_USERNAME}
ftp.password=${FTP_PASSWORD}
ftp.local.path=${FTP_LOCAL_PATH}
#Sample local path, if adding directly in properties file: C:\\\\inetpub\\ftp-folder-tmp
#ftp.local.path=\\\\Ldev-aliniaz\\folder

db2.hibernate.ddl.strategy=none
db2.hibernate.dialect=org.hibernate.dialect.DB2Dialect


sqlserver.hibernate.ddl.strategy=none
spring.liquibase.enabled=false

sqlserver.hibernate.dialect=org.hibernate.dialect.SQLServer2008Dialect

#Sharepoint Credentials
sharepoint.tenant.id=${SHAREPOINT_TENANT_ID}
sharepoint.client.id=${SHAREPOINT_CLIENT_ID}
sharepoint.client.secret=${SHAREPOINT_CLIENT_SECRET}

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# for multithreaded download size of each chunk in KBs.
image.download.chunk-size=512
# for multithreaded download core thread count which will stay open throughout application.
image.download.core-pool-size=5
# for multithreaded download max thread count throughout application.
image.download.max-pool-size=10
# for multithreaded conversion core thread count which will stay open throughout application.
image.conversion.core-pool-size=5
# for multithreaded conversion max thread count throughout application.
image.conversion.max-pool-size=10
# for multithreaded download core thread count which will stay open throughout application.
image.download.files.core-pool-size=5
# for multithreaded download max thread count throughout application.
image.download.files.max-pool-size=10

#SMTP Configurations
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.aut=true
spring.mail.properties.mail.smtp.starttls.enable=true

#JWT Configurations
#secret key for signing
jwt.secret.key=${AFBA_JWT_SECRET_KEY}
#JWT token expiry in seconds
jwt.token.expiry=10800
#JWT token issuer
jwt.token.issuer=afba-new-java-app
client.credentials=${AFBA_CLIENT_CREDENTIALS}

afba.dd-process.base-dir=${AFBA_DDPROCESS_BASEDIR}
afba.esp-inbound.base-dir=${AFBA_ESPINBOUND_BASEDIR}
afba.scaned.doc.dir=${AFBA_SCANED_DOC_DIR}
afba.uploaded.doc.dir=${AFBA_UPLOADED_DOC_DIR}
afba.staunton.base.dir=${AFBA_STAUNTON_BASE_DIR}
spring.jpa.show-sql=false
#spring.jpa.properties.hibernate.format_sql=true
#spring.jackson.deserialization.accept-float-as-int=false

#Exstream Job
afba.exstream.job.base.dir=${AFBA_EXSTREAM_BASE_DIR}
afba.exstream.job.download.doc.dir = ${AFBA_EXSTREAM_DOC_DOWNLOAD_DIR}

#pageable properties
spring.data.web.pageable.page-parameter=pageNumber
spring.data.web.pageable.size-parameter=pageSize
spring.data.web.sort.sort-parameter=sortInfo
#retry mechanism
retry.maxAttempts=${AFBA_RETRY_MAX_ATTEMPTS}
retry.maxDelay=${AFBA_RETRY_MAX_DELAY}

afba.file.conversion.temp-dir=${AFBA_FILECONVERSION_TEMPDIR}

spring.mvc.pathmatch.matching-strategy=ant-path-matcher

#LIFEPRO API TIMEOUTS: format 30s, 20s, 150s etc.
life.pro.connect.timeout=${LIFE_PRO_CONNECT_TIMEOUT}
life.pro.read.timeout=${LIFE_PRO_READ_TIMEOUT}