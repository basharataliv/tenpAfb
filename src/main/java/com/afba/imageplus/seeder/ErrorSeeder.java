package com.afba.imageplus.seeder;

import java.util.Map;

import org.springframework.stereotype.Component;

import com.afba.imageplus.constants.EKDError;
import com.afba.imageplus.model.sqlserver.Error;
import com.afba.imageplus.repository.sqlserver.ErrorRepository;

@Component
public class ErrorSeeder extends BaseSeeder<Error, String> {

    public ErrorSeeder(ErrorRepository repository) {
        super(repository);
    }

    @Override
    public Map<String, Error> getEntities() {
        // noinspection RedundantTypeArguments (explicit type arguments speedup
        // compilation and analysis time)
        return Map.<String, Error>ofEntries(
                Map.entry(EKDError.EKD310404.code(),
                        new Error(EKDError.EKD310404.code(), "Document against given document ID (%s) not found.")),
                Map.entry(EKDError.EKD310004.code(), new Error(EKDError.EKD310004.code(), "Invalid documentType %s")),
                Map.entry(EKDError.EKD310400.code(),
                        new Error(EKDError.EKD310400.code(), "Document file is required.")),
                Map.entry(EKDError.EKD310422.code(),
                        new Error(EKDError.EKD310422.code(), "Failed to convert document file to PDF.")),
                Map.entry(EKDError.EKD310502.code(),
                        new Error(EKDError.EKD310502.code(), "Failed to download document file.")),
                Map.entry(EKDError.EKD360400.code(), new Error(EKDError.EKD360400.code(), "Invalid request: %s")),
                Map.entry(EKDError.EKD360404.code(),
                        new Error(EKDError.EKD360404.code(), "User Profile not found against REPID: %s")),
                Map.entry(EKDError.EKD350404.code(), new Error(EKDError.EKD350404.code(), "Case Not Found")),
                Map.entry(EKDError.EKD315409.code(), new Error(EKDError.EKD315409.code(), "Record is found")),
                Map.entry(EKDError.EKD850409.code(),
                        new Error(EKDError.EKD850409.code(), "Another user is working on case. Please try later.")),
                Map.entry(EKDError.EKD350409.code(), new Error(EKDError.EKD350409.code(), "CaseStatus is : %s")),
                Map.entry(EKDError.EKD250404.code(), new Error(EKDError.EKD250404.code(), "Queue not found")),
                Map.entry(EKDError.EKD315407.code(),
                        new Error(EKDError.EKD315407.code(), "No Case found against id %s.")),
                Map.entry(EKDError.EKD315408.code(),
                        new Error(EKDError.EKD315408.code(), "No Document found against id %s.")),
                Map.entry(EKDError.EKD315410.code(),
                        new Error(EKDError.EKD315410.code(), "No Document and Case association found")),
                Map.entry(EKDError.EKD150404.code(),
                        new Error(EKDError.EKD150404.code(), "Queue profile not found against ID %s.")),
                Map.entry(EKDError.EKD850401.code(),
                        new Error(EKDError.EKD850401.code(), "QrepId id doesnt match id provided")),
                Map.entry(EKDError.EKD850404.code(),
                        new Error(EKDError.EKD850404.code(), "Provided case is not in work")),
                Map.entry(EKDError.EKD360401.code(),
                        new Error(EKDError.EKD360401.code(), "You are not allowed to access this resource.")),
                Map.entry(EKDError.EKD110404.code(), new Error(EKDError.EKD110404.code(), "DocumentType Not Found")),
                Map.entry(EKDError.EKD110401.code(),
                        new Error(EKDError.EKD110401.code(), "You are not allowed to access this DocumentType")),
                Map.entry(EKDError.EKD350004.code(),
                        new Error(EKDError.EKD350004.code(), "Case ID is invalid or no documents found in case.")),
                Map.entry(EKDError.EKD350001.code(),
                        new Error(EKDError.EKD350001.code(), "Case status not valid for DEQFLR")),
                Map.entry(EKDError.EKD350002.code(),
                        new Error(EKDError.EKD350002.code(), "Case status not valid for ENQUEUE")),
                Map.entry(EKDError.EKD350003.code(),
                        new Error(EKDError.EKD350003.code(), "Case status is not valid for work a case")),
                Map.entry(EKDError.EKDMAP500.code(),
                        new Error(EKDError.EKDMAP500.code(), "Something went wrong while mapping.")),
                Map.entry(EKDError.EKD350400.code(),
                        new Error(EKDError.EKD350400.code(), "Bad case profile request. %s")),
                Map.entry(EKDError.EKD150401.code(),
                        new Error(EKDError.EKD150401.code(), "You are not allowed to access this Queue")),
                Map.entry(EKDError.EKD000409.code(),
                        new Error(EKDError.EKD000409.code(), "Resource with given ID already exists.")),
                Map.entry(EKDError.EKD110409.code(),
                        new Error(EKDError.EKD110409.code(), "Document Type with ID (%s) already exists.")),
                Map.entry(EKDError.EKD150409.code(),
                        new Error(EKDError.EKD150409.code(), "Queue with ID (%s) already exists.")),
                Map.entry(EKDError.EKD352409.code(),
                        new Error(EKDError.EKD352409.code(), "Case comment with given ID (%s) already exists.")),
                Map.entry(EKDError.EKD352404.code(),
                        new Error(EKDError.EKD352404.code(), "Case comment not found against ID %s.")),
                Map.entry(EKDError.ID3RJT404.code(),
                        new Error(EKDError.ID3RJT404.code(), "Id3Reject Date not found against SSN %s.")),
                Map.entry(EKDError.EKD350005.code(), new Error(EKDError.EKD350005.code(), "Invalid request")),
                Map.entry(EKDError.EKD350401.code(),
                        new Error(EKDError.EKD350401.code(), "You are not allowed to access this resource")),
                Map.entry(EKDError.PNDDOC404.code(), new Error(EKDError.PNDDOC404.code(), "PNDDOCTYPE %s not found")),
                Map.entry(EKDError.EKD315422.code(),
                        new Error(EKDError.EKD315422.code(), "PolicyNo must be defined when reindexFlag is Y")),
                Map.entry(EKDError.EKD315423.code(),
                        new Error(EKDError.EKD315423.code(), "UserRepId and JobRepId cannot be empty together")),
                Map.entry(EKDError.EKD315404.code(),
                        new Error(EKDError.EKD315404.code(), "record not found with caseId and DocumentId")),
                Map.entry(EKDError.EKD350422.code(),
                        new Error(EKDError.EKD350422.code(), "PolicyNo didn't match against Record present")),
                Map.entry(EKDError.EKD250422.code(),
                        new Error(EKDError.EKD250422.code(), "QPRIORTY VAL cannot be parsed")),
                Map.entry(EKDError.EKD370404.code(),
                        new Error(EKDError.EKD370404.code(), "No PEND CASE found against Case ID: %s")),
                Map.entry(EKDError.EKD260409.code(),
                        new Error(EKDError.EKD260409.code(), "Document with ID %s already added for re-indexing.")),
                Map.entry(EKDError.EKD260404.code(),
                        new Error(EKDError.EKD260404.code(), "Document not found for re-indexing against ID: %s")),
                Map.entry(EKDError.EKD210404.code(),
                        new Error(EKDError.EKD210404.code(), "No indexing request exists")),
                Map.entry(EKDError.EKD310001.code(),
                        new Error(EKDError.EKD310001.code(), "Document scanning information is missing.")),
                Map.entry(EKDError.EKD210001.code(),
                        new Error(EKDError.EKD210001.code(), "Indexing request already exists.")),
                Map.entry(EKDError.EKD000404.code(),
                        new Error(EKDError.EKD000404.code(), "No Resource found against given ID: %s")),
                Map.entry(EKDError.EKD260001.code(),
                        new Error(EKDError.EKD260001.code(),
                                "Document %s, already present in re-indexing with provided status.")),
                Map.entry(EKDError.EKD000403.code(),
                        new Error(EKDError.EKD000403.code(), "You are not authorized for %s: %s")),
                Map.entry(EKDError.EKD150406.code(),
                        new Error(EKDError.EKD150406.code(),
                                "Invalid QCLASS range specified: range-from cannot be greater than range-to")),
                Map.entry(EKDError.EKD360406.code(),
                        new Error(EKDError.EKD360406.code(),
                                "Invalid SECRANGE range specified: range-from cannot be greater than range-to")),
                Map.entry(EKDError.EKD210002.code(),
                        new Error(EKDError.EKD210002.code(),
                                "Document %s, already present in indexing with provided status.")),
                Map.entry(EKDError.EKDUSR404.code(),
                        new Error(EKDError.EKDUSR404.code(), "No record found against identifier %s in EKDUSER")),
                Map.entry(EKDError.CODSFL001.code(),
                        new Error(EKDError.CODSFL001.code(), "No record found in CODESFL for system generated ssn")),
                Map.entry(EKDError.EKD110406.code(),
                        new Error(EKDError.EKD110406.code(),
                                "DocumentType Default Suspend Days must be greater than 0")),
                Map.entry(EKDError.EKD370401.code(),
                        new Error(EKDError.EKD370401.code(), "Only a supervisor is allowed to perform this action.")),
                Map.entry(EKDError.EKD350406.code(),
                        new Error(EKDError.EKD350406.code(), "Scanning information is missing against caseId: %s")),
                Map.entry(EKDError.EKD350006.code(), new Error(EKDError.EKD350006.code(), "Unable to pend the case.")),
                Map.entry(EKDError.EKDIDX001.code(),
                        new Error(EKDError.EKDIDX001.code(), "Only SSN can be passed for indexing apps document")),
                Map.entry(EKDError.EKD350007.code(),
                        new Error(EKDError.EKD350007.code(), "Unable to release the case.")),
                Map.entry(EKDError.EKD150405.code(),
                        new Error(EKDError.EKD150405.code(), "Case description not matched")),
                Map.entry(EKDError.QCHIST001.code(),
                        new Error(EKDError.QCHIST001.code(), "No record found against case: %s and policy: %s")),
                Map.entry(EKDError.LPAUTP404.code(),
                        new Error(EKDError.LPAUTP404.code(), "No LifePro policies found for auto issuing.")),
                Map.entry(EKDError.WKQCRN404.code(),
                        new Error(EKDError.WKQCRN404.code(), "No record found against user: %s in WRKQCRUN")),
                Map.entry(EKDError.EKD350430.code(),
                        new Error(EKDError.EKD350430.code(), "You cannot reassign the case to the %s queue")),
                Map.entry(EKDError.EKD350431.code(),
                        new Error(EKDError.EKD350431.code(),
                                "You cannot reassign the case to the same queue as you are in")),
                Map.entry(EKDError.EKD350432.code(),
                        new Error(EKDError.EKD350432.code(), "You are not authorized to delete this case")),
                Map.entry(EKDError.EKD350433.code(),
                        new Error(EKDError.EKD350433.code(), "Reassign to EMSIDONEQ only from hot queue")),
                Map.entry(EKDError.EKD350434.code(),
                        new Error(EKDError.EKD350434.code(),
                                "You cannot assign the case from %s queue to any other queue")),
                Map.entry(EKDError.EKD350435.code(),
                        new Error(EKDError.EKD350435.code(),
                                "You can only assign from IMAGCHEKHQ or IMAGCREDHQ queue to  IMAGLPHLDQ")),
                Map.entry(EKDError.EKD350436.code(),
                        new Error(EKDError.EKD350436.code(), "Only reassign case to MOVE or APPSGFG queue")),
                Map.entry(EKDError.EKD350437.code(),
                        new Error(EKDError.EKD350437.code(), "Only reassign case to MOVE or FSROGFQ queue")),
                Map.entry(EKDError.EKD350438.code(),
                        new Error(EKDError.EKD350438.code(),
                                "You cannot assign the case to IMAGHLDQ Queue, reassign to IMAGLPHLDQ")),
                Map.entry(EKDError.EKD350439.code(),
                        new Error(EKDError.EKD350439.code(),
                                "Can not queue to MOVE without EXECLTRS. Contact Image Department")),
                Map.entry(EKDError.EKD350440.code(),
                        new Error(EKDError.EKD350440.code(), "Only reassign case to MOVE  or CHEKADDQ queue")),
                Map.entry(EKDError.EKD350441.code(),
                        new Error(EKDError.EKD350441.code(),
                                "Cannot reassign case to CHEKADDQ due to no checkmatic document not found")),
                Map.entry(EKDError.EKD350442.code(),
                        new Error(EKDError.EKD350442.code(),
                                "Only reassign case to MOVE, or FSROBAADM, or CHEKADDQ, or MEDIREVWQ")),
                Map.entry(EKDError.EKD350443.code(),
                        new Error(EKDError.EKD350443.code(), "Only reassign case to MOVE,FSRONGADM queue")),
                Map.entry(EKDError.EKD350444.code(),
                        new Error(EKDError.EKD350444.code(), "Only reassign case to MOVE queue")),
                Map.entry(EKDError.EKD350445.code(),
                        new Error(EKDError.EKD350445.code(), "Only reassign case to MOVE, APPSNGADM queue")),
                Map.entry(EKDError.EKD350446.code(),
                        new Error(EKDError.EKD350446.code(),
                                "Only reassign case to MOVE, or APPPSBAADM, or CHEKADDQ, or FSROBAADM, or MEDIREVWQ")),
                Map.entry(EKDError.EKD350447.code(), new Error(EKDError.EKD350447.code(),
                        " Only reassign case to MOVE, APPSBAADM, CHEKADDQ, FSROPRADM, APPSCAAD, FSROCAADM, FSROLTADM")),
                Map.entry(EKDError.EKD350448.code(),
                        new Error(EKDError.EKD350448.code(), " You cannot reassign case to internal Transition queue")),
                Map.entry(EKDError.EKD350449.code(), new Error(EKDError.EKD350449.code(),
                        "Only Reassign case to MOVE, APPSCAADM, FSROLTADM, FSROCAADM,CHEKADDQ, MEDIREVWQ, FSROPRADM")),
                Map.entry(EKDError.EKD350450.code(),
                        new Error(EKDError.EKD350450.code(),
                                "Only allow reassign case To FSROPRADM queue for Puerto Rico LT app ")),
                Map.entry(EKDError.EKD350451.code(),
                        new Error(EKDError.EKD350451.code(),
                                "Consolidated agent not found, reassign to a Non-CAS ADM queue")),
                Map.entry(EKDError.EKD350452.code(),
                        new Error(EKDError.EKD350452.code(),
                                "Puerto Rico LT app found, reassign case to FSROPRADM queue")),
                Map.entry(EKDError.EKD350453.code(),
                        new Error(EKDError.EKD350453.code(), "Case not eligible for ESP process")),
                Map.entry(EKDError.EKD350454.code(),
                        new Error(EKDError.EKD350454.code(), "Only reassign to FSROEMSIQ or EMSIDONEQ")),
                Map.entry(EKDError.EKD350455.code(),
                        new Error(EKDError.EKD350455.code(), "Cannot Reassign case as current queueId is empty")),
                Map.entry(EKDError.EKD350456.code(),
                        new Error(EKDError.EKD350456.code(), "User not authorized to reassign a case in this queue")),
                Map.entry(EKDError.EKD350457.code(),
                        new Error(EKDError.EKD350457.code(),
                                "You cannot assign the case to APPSVERIQ queue, reassign to IMAGHLDQ")),
                Map.entry(EKDError.EKD350458.code(),
                        new Error(EKDError.EKD350458.code(),
                                "You cannot assign the case to IMAGHLDQ Queue, reassign to IMAGLPHLDQ")),
                Map.entry(EKDError.EKD350459.code(),
                        new Error(EKDError.EKD350459.code(), "You cannot assign the case to IMAGLPHLDQ queue")),
                Map.entry(EKDError.EKD350460.code(),
                        new Error(EKDError.EKD350460.code(), "EKD350_CURRENT_QUEUE_ID not present in system")),
                Map.entry(EKDError.EKD350461.code(),
                        new Error(EKDError.EKD350461.code(), "You are not authorized to delete this case")),
                Map.entry(EKDError.EKD350462.code(),
                        new Error(EKDError.EKD350462.code(), "You cannot reassign case to DELETES queue")),
                Map.entry(EKDError.EKD350463.code(),
                        new Error(EKDError.EKD350463.code(), "Case not eligible for EMSI process")),
                Map.entry(EKDError.WKQCRN001.code(),
                        new Error(EKDError.WKQCRN001.code(), "Invalid document type for WRKQCRUN")),
                Map.entry(EKDError.EKDUSR406.code(),
                        new Error(EKDError.EKDUSR406.code(), "User details format incorrect")),
                Map.entry(EKDError.EKD350008.code(),
                        new Error(EKDError.EKD350008.code(), "Case %s status or current queue invalid for move queue")),
                Map.entry(EKDError.EKD350009.code(),
                        new Error(EKDError.EKD350009.code(), "Invalid target queue %s for move queue")),
                Map.entry(EKDError.EKD250003.code(),
                        new Error(EKDError.EKD250003.code(), "No case found in %s queue.")),
                Map.entry(EKDError.EKD350464.code(),
                        new Error(EKDError.EKD350464.code(),
                                "You cannot reassign the case to APPSLT121 queue, LT121 App not found")),
                Map.entry(EKDError.LIFPRO406.code(),
                        new Error(EKDError.LIFPRO406.code(), "No record found from Life Pro api")),
                Map.entry(EKDError.LIFPRO407.code(),
                        new Error(EKDError.LIFPRO407.code(), "Unable to call Life Pro api")),
                Map.entry(EKDError.LIFPRO408.code(),
                        new Error(EKDError.LIFPRO408.code(), "Life Pro api token not found")),
                Map.entry(EKDError.EKD350465.code(),
                        new Error(EKDError.EKD350465.code(),
                                "You can only assign from IMAGCHEKHQ or IMAGCREDHQ queue to IMAGHLDQ")),
                Map.entry(EKDError.EKD350466.code(),
                        new Error(EKDError.EKD350466.code(), "You cannot assign the case to IMAGHLDQ queue")),
                Map.entry(EKDError.LPAUTO404.code(), new Error(EKDError.LPAUTO404.code(), "LPAUTOIS record not found")),
                Map.entry(EKDError.EKD350467.code(), new Error(EKDError.EKD350467.code(),
                        "Only reassign case to MOVE,  APPSLTADM,  CHEKADDQ, FSROLTADM, FSROCAADM, FSROPRADM, MEDIREVWQ")),
                Map.entry(EKDError.EKD350468.code(), new Error(EKDError.EKD350468.code(),
                        "Only reassign case to MOVE,  APPSLTADM,  CHEKADDQ, FSROLTADM, APPSCAADM, FSROPRADM, MEDIREVWQ")),
                Map.entry(EKDError.EKD350469.code(), new Error(EKDError.EKD350469.code(),
                        "Only reassign case to MOVE,  APPSLTADM,  CHEKADDQ,  FSROLTADM, FSROCAADM, APPSCAADM, MEDIREVWQ")),
                Map.entry(EKDError.EKD350470.code(),
                        new Error(EKDError.EKD350470.code(), "Case not eligible for ESP, cannot send to Hot queue")),
                Map.entry(EKDError.EKD350471.code(),
                        new Error(EKDError.EKD350471.code(), "Only reassign case to MOVE, FSROEMSIQ, EMSIDONEQ")),
                Map.entry(EKDError.EKD350472.code(),
                        new Error(EKDError.EKD350472.code(),
                                "Only reassign case to MOVE, FSROEMSIQ, EMSIDONEQ, FSROCAEMSI, APPSEMSICA")),
                Map.entry(EKDError.EKD350473.code(),
                        new Error(EKDError.EKD350473.code(),
                                "Consolidated agent not found, reassign to  Non-CAS Hot queue")),
                Map.entry(EKDError.EKD350474.code(),
                        new Error(EKDError.EKD350474.code(), "Consolidated agent found, reassign to CAS Hot queue")),
                Map.entry(EKDError.EKD350475.code(), new Error(EKDError.EKD350475.code(),
                        "Only reassign case to MOVE, APPSEMSIBA, APPSEMSILT, EMSIDONEQ, FSROCAEMSI, APPSEMSICA")),
                Map.entry(EKDError.EKD350476.code(),
                        new Error(EKDError.EKD350476.code(),
                                "Only reassign to EMSIDONEQ, APPSEMSICA, APPSEMSILT, FSROEMSIQ")),
                Map.entry(EKDError.EKD350477.code(),
                        new Error(EKDError.EKD350477.code(),
                                "Only reassign to EMSIDONEQ, FSROCAEMSI, APPSEMSILT, FSROEMSIQ")),
                Map.entry(EKDError.EKD350478.code(),
                        new Error(EKDError.EKD350478.code(),
                                "Wrong hot queue. Reassign to another hot queue  by product")),
                Map.entry(EKDError.EKD350479.code(),
                        new Error(EKDError.EKD350479.code(),
                                "Consolidated agent not found, reassign to Non-CAS Hot queue")),
                Map.entry(EKDError.EKD350480.code(),
                        new Error(EKDError.EKD350480.code(),
                                "Consolidated agent found,You cannot reassign to FSROEMSIQ")),
                Map.entry(EKDError.EKD350481.code(),
                        new Error(EKDError.EKD350481.code(),
                                "Consolidated agent found,You cannot reassign to APPSEMSILT")),
                Map.entry(EKDError.EKD350482.code(),
                        new Error(EKDError.EKD350482.code(),
                                "Only allow reassign case To FSROPRADM queue for Puerto Rico LT app")),
                Map.entry(EKDError.EKD350483.code(),
                        new Error(EKDError.EKD350483.code(),
                                "Puerto Rico LT app found, reassign case to FSROPRADM queue")),
                Map.entry(EKDError.EKD350484.code(),
                        new Error(EKDError.EKD350484.code(), "Consolidated agent found, reassign to CAS ADM queue")),
                Map.entry(EKDError.EKD350485.code(),
                        new Error(EKDError.EKD350485.code(), "You cannot assign the case to IMAGLPHLDQ queue")),
                Map.entry(EKDError.EMSIBD001.code(),
                        new Error(EKDError.EMSIBD001.code(),
                                "Page no validation failed for EMSIINBD record with policy %s")),
                Map.entry(EKDError.EMSIBD002.code(),
                        new Error(EKDError.EMSIBD002.code(),
                                "File ext validation failed for EMSIINBD record with policy %s")),
                Map.entry(EKDError.EKD310405.code(),
                        new Error(EKDError.EKD310405.code(), "Document type is not allowed to import document")),
                Map.entry(EKDError.PRTMPL001.code(),
                        new Error(EKDError.PRTMPL001.code(), "No policies found against SSN %s")),
                Map.entry(EKDError.EKD350486.code(),
                        new Error(EKDError.EKD350486.code(), "You cannot reassign to target queue")),
                Map.entry(EKDError.EKD260406.code(),
                        new Error(EKDError.EKD260406.code(), "Status code can only be 1 or 8")),
                Map.entry(EKDError.EKD150408.code(),
                        new Error(EKDError.EKD150408.code(),
                                "The queueId and returnQueueId can not be both null or empty")),
                Map.entry(EKDError.ICRFIL404.code(),
                        new Error(EKDError.ICRFIL404.code(), "ICRFILE record not found against documentId %s")),
                Map.entry(EKDError.EKD350846.code(),
                        new Error(EKDError.EKD350846.code(),
                                "System generated SSN found, pls update Lifepro and EKDUSER records")),
                Map.entry(EKDError.EKD350847.code(),
                        new Error(EKDError.EKD350847.code(),
                                "Policy not declined, nor approved, cannot reassign to MOVE from Hot Queue")),
                Map.entry(EKDError.EKD350848.code(),
                        new Error(EKDError.EKD350848.code(), "Policy not approved, you cannot reassign to MOVE queue")),
                Map.entry(EKDError.EKD350849.code(),
                        new Error(EKDError.EKD350849.code(), "Policy status unknown, cannot reassign to MOVE queue")),
                Map.entry(EKDError.QCHIST404.code(),
                        new Error(EKDError.QCHIST404.code(), "QCRUNHIS Record not present against Case No %s")),
                Map.entry(EKDError.QCHIST405.code(),
                        new Error(EKDError.QCHIST405.code(), "No QC review log entry found, you need to enter QC log")),
                Map.entry(EKDError.QCHIST406.code(),
                        new Error(EKDError.QCHIST406.code(),
                                "Mandatory comments required within 60 minutes,If QC review not pass")),
                Map.entry(EKDError.EKD210003.code(),
                        new Error(EKDError.EKD210003.code(), "The index flag for EKD0210 is Y,Cannot delete record")),
                Map.entry(EKDError.EKDIDX002.code(), new Error(EKDError.EKDIDX002.code(),
                        "Product id and policy type can not be null in case of Apps Document")));

    }

    @Override
    protected boolean doUpdate() {
        return false;
    }
}
